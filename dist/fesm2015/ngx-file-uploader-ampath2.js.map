{"version":3,"file":"ngx-file-uploader-ampath2.js.map","sources":["ng://ngx-file-uploader-ampath2/lib/ngx-file-uploader.service.ts","ng://ngx-file-uploader-ampath2/lib/ngx-file-uploader.component.ts","ng://ngx-file-uploader-ampath2/lib/ngx-file-uploader.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxFileUploaderService {\r\n\r\n  constructor() { }\r\n}\r\n","import {\n  Component, OnInit, Input, forwardRef,\n  OnChanges, Output, EventEmitter, ÉµConsole\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n// import * as pdfMake from 'pdfmake/build/pdfmake';\nimport jsPDF from 'jspdf';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { WebcamImage, WebcamInitError, WebcamUtil } from 'ngx-webcam';\n\nconst noop = () => {\n  // placeholder call backs\n};\n\n@Component({\n  selector: 'lib-file-uploader',\n  styles: [`.btn-file{position:relative;overflow:hidden}.btn-file input[type=file]{position:absolute;top:0;right:0;min-width:100%;min-height:100%;font-size:100px;text-align:right;opacity:0;outline:0;background:#fff;cursor:inherit;display:block}#img-upload{width:200px}.image-preview-input input[type=file]{position:absolute;top:0;right:0;margin:0;padding:0;font-size:20px;cursor:pointer;opacity:0}.file-upload{background-color:#fff;width:600px;margin:0 auto;padding:20px}.file-upload-btn{width:100%;margin:0;color:#fff;background:#1fb264;border:none;padding:10px;border-radius:4px;border-bottom:4px solid #15824b;transition:.2s;outline:0;text-transform:uppercase;font-weight:700}ul{list-style-type:none;margin:0;padding:0}.file-upload-btn:hover{background:#1aa059;color:#fff;transition:.2s;cursor:pointer}.file-upload-btn:active{border:0;transition:.2s}.file-upload-content{display:none;text-align:center}.file-upload-input{position:absolute;margin:0;padding:0;width:100%;height:100%;outline:0;opacity:0;cursor:pointer}.image-upload-wrap{margin-top:20px;border:4px dashed #3683c7;position:relative}.image-dropping,.image-upload-wrap:hover{background-color:#337ab7;border:4px dashed #fff}.image-title-wrap{padding:0 15px 15px;color:#222}.drag-text{text-align:center}.drag-text h3{font-weight:100;text-transform:uppercase;color:#155a82;padding:60px 0}.file-upload-image{max-height:200px;max-width:200px;margin:auto;padding:20px}.button{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;touch-action:manipulation;cursor:pointer;background-color:#004a7f;border:none;color:#fff;text-decoration:none;-webkit-animation:1.5s infinite glowing;animation:1.5s infinite glowing}@-webkit-keyframes glowing{0%{background-color:#002fb2;-webkit-box-shadow:0 0 3px #005cb2}50%{background-color:#203864;-webkit-box-shadow:0 0 40px #203864}100%{background-color:#005cb2;-webkit-box-shadow:0 0 3px #005cb2}}@keyframes glowing{0%,100%{background-color:#005cb2;box-shadow:0 0 3px #005cb2}50%{background-color:#203864;box-shadow:0 0 40px #203864}}.actionBtn{margin-top:5px;margin-bottom:2px;font-size:1.2em}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700;margin-right:10px}.row-cb{margin:auto;font-size:15px}.row-cb label{float:left}.row-cb span{float:left;text-align:left}.snapshot{text-align:center}.snapshot img{max-width:800px;max-height:800px}.columne#caption .text h1{margin:0;color:#fff}.columne#caption:hover .text{opacity:1;cursor:pointer;opacity:1}.columne#caption{position:relative}.columne#caption .text{position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);z-index:10;opacity:0;transition:.8s}.columne#caption:hover img{-webkit-filter:blur(4px);filter:blur(4px)}@media (max-width:629px){.file-upload-input{display:none!important}}`],\n  template: `<div *ngIf=\"message\" class=\"alert alert-{{messageType}} alert-dismissible\" role=\"alert\">\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span\r\n        aria-hidden=\"true\">&times;</span></button> {{message}}\r\n  </div>\r\n<div *ngIf=\"backButton\">\r\n  <button class=\"btn btn-default image-preview-primary\" type=\"button\" (click)=\"back()\" >\r\n    <span class=\"glyphicon glyphicon-circle-arrow-left\"></span> Back\r\n</button>\r\n</div>\r\n<div *ngIf=\"selectFileType\" class=\"panel panel-primary\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            {{value}} \r\n            <button *ngIf=\"value\" type=\"button\" (click)=\"clear()\" class=\"btn btn-default image-preview-clear\">\r\n                <span class=\"glyphicon glyphicon-remove\"></span> Clear</button>\r\n        </div>\r\n      </div>\r\n  <div class=\"panel-heading\">UPLOAD FILE TYPE</div>\r\n  <div class=\"panel-body\">\r\n    <div class=\"row-cb\">\r\n      <span><input name=\"image\" id=\"ima\" (change)=\"toggleVisibility('image')\" type=\"checkbox\" /></span>\r\n      <label for=\"ima\">Image</label>\r\n\r\n      <div class=\"clear-both\"></div>\r\n</div>\r\n<div class=\"row-cb\">\r\n  <span><input name=\"option\" id=\"pdf\" (change)=\"toggleVisibility('pdf')\" type=\"checkbox\" /></span>\r\n  <label for=\"pdf\">PDF</label>\r\n\r\n  <div class=\"clear-both\"></div>\r\n</div>\r\n<div *ngIf=\"both\" class=\"row-cb\">\r\n  <span><input name=\"option\" id=\"both\" (change)=\"toggleVisibility('both')\" type=\"checkbox\" /></span>\r\n  <label  for=\"both\">Image & PDF</label>\r\n\r\n  <div class=\"clear-both\"></div>\r\n</div>\r\n<div class=\"row-cb\">\r\n  <span><input name=\"camera\" id=\"camera\" (change)=\"toggleVisibility('liveCamera')\" type=\"checkbox\" /></span>\r\n  <label for=\"camera\" >Live Camera</label>\r\n\r\n  <div class=\"clear-both\"></div>\r\n</div>\r\n  </div>\r\n</div>\r\n<div [hidden]=\"!urls[0]\" class=\"panel panel-primary\">\r\n  <div class=\"panel-heading\">SELECTED FILES</div>\r\n  <div class=\"panel-body\">\r\n      <div style=\"display: inline-block;\" *ngFor=\"let url of urls;let i=index\">\r\n          <a class = \"columne\" id = \"caption\">\r\n           <img style=\" border: 1px solid rgb(97, 97, 97); margin: 2px; border-radius: 4px;padding: 5px;\" id=\"img{{i}}\" [src]=\"url.data || url.imageAsDataUrl\" \r\n           onError=\"this.onerror=null;this.src='https://store-images.s-microsoft.com/image/apps.34961.13510798887621962.47b62c4c-a0c6-4e3c-87bb-509317d9c364.a6354b48-c68a-47fa-b69e-4cb592d42ffc?mode=scale&q=90&h=300&w=300' ;\" class=\"rounded mb-3\" width=\"100\" height=\"200\">\r\n           <div class=\"text\"><h2 title=\"Click to Delete File {{url.name}}\" (click)=\"delete(url)\"  style=\"color: red; font-family: fantasy;\"><span class=\"glyphicon glyphicon-trash\"></span>REMOVE</h2></div>\r\n          </a>\r\n         </div>\r\n    </div>\r\n    <div class=\"panel-footer\">\r\n        <button *ngIf=\"UploadCaptions\" type=\"button\" (click)=\"upload()\" class=\"button pull-right\">\r\n            <span class=\"glyphicon glyphicon-upload\"></span> Upload Files\r\n        </button>\r\n        <button *ngIf=\"!pdfAvailable && fileUpload || liveCamera || merge\" type=\"button\" [disabled]=\"!urls[1]\" (click)=\"MergeImages()\"  title=\"merge the images as pages in one pdf document\"  class=\"btn btn-default image-preview-clear\">\r\n          <span class=\"glyphicon glyphicon-upload\"></span> Merge Files\r\n        </button>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"fileUpload\">\r\n\r\n  <div class=\"input-group\">\r\n    <input type=\"text\" class=\"form-control\" readonly [(ngModel)]=\"value\">\r\n    <div class=\"input-group-btn\">\r\n\r\n      <div class=\"btn btn-default image-preview-input\">\r\n        <span class=\"glyphicon glyphicon-folder-open\"></span>\r\n        <span class=\"image-preview-input-title\">SELECT FILE</span>\r\n        <input *ngIf=\"multiple\" type=\"file\" multiple accept=\"{{fileType}}\" (blur)=\"onBlur()\" name=\"input-file-preview\" (change)=\"onChange($event)\"\r\n        /> \r\n        <input *ngIf=\"!multiple\" type=\"file\" accept=\"{{fileType}}\" (blur)=\"onBlur()\" name=\"input-file-preview\" (change)=\"onChange($event)\"\r\n        /> \r\n      </div>\r\n      <button *ngIf=\"value\" type=\"button\" (click)=\"clear()\" class=\"btn btn-default image-preview-clear\">\r\n                        <span class=\"glyphicon glyphicon-remove\"></span> Clear\r\n    </button>\r\n    <button type=\"button\" (click)=\"upload()\" class=\"button\">\r\n      <span class=\"glyphicon glyphicon-upload\"></span> Upload\r\n</button>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"!mobile\" class=\"image-upload-wrap\">\r\n    <input *ngIf=\"multiple\" class=\"file-upload-input\" type='file' (change)=\"onChange($event)\" multiple accept=\"{{fileType}}\" />\r\n    <input *ngIf=\"!multiple\" class=\"file-upload-input\" type='file' (change)=\"onChange($event)\" accept=\"{{fileType}}\" />\r\n    <div class=\"drag-text\">\r\n      <h3>Drag and Drop file(s)</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div *ngIf=\"liveCamera\">\r\n  <div style=\"text-align:center\">\r\n    <div>\r\n      <webcam [height]=\"700\" [width]=\"600\" [trigger]=\"triggerObservable\" (imageCapture)=\"handleImage($event)\" *ngIf=\"showWebcam\"\r\n              [allowCameraSwitch]=\"allowCameraSwitch\" [switchCamera]=\"nextWebcamObservable\"\r\n              [videoOptions]=\"videoOptions\"\r\n              [imageQuality]=\"1\"\r\n              (cameraSwitched)=\"cameraWasSwitched($event)\"\r\n              (initError)=\"handleInitError($event)\"\r\n      ></webcam>\r\n      <br/>\r\n      <button class=\"btn btn-default image-preview-clear\" (click)=\"triggerSnapshot();\"><span class=\"glyphicon glyphicon-camera\"></span>Take A Snapshot</button>\r\n      <!-- <button class=\"actionBtn\" (click)=\"toggleWebcam();\">Toggle Webcam</button> -->\r\n      <!-- <br/> -->\r\n      <button class=\"btn btn-default image-preview-clear\" (click)=\"showNextWebcam(true);\" [disabled]=\"!multipleWebcamsAvailable\">Change Camera</button>\r\n      <!-- <input id=\"cameraSwitchCheckbox\" type=\"checkbox\" [(ngModel)]=\"allowCameraSwitch\"><label for=\"cameraSwitchCheckbox\">Allow Camera Switch</label>\r\n      <br/> -->\r\n      <!-- DeviceId: <input id=\"deviceId\" type=\"text\" [(ngModel)]=\"deviceId\" style=\"width: 500px\">\r\n      <button (click)=\"showNextWebcam(deviceId);\">Activate</button> -->\r\n    </div>\r\n  </div>\r\n  <h4 *ngIf=\"errors.length > 0\">Messages:</h4>\r\n  <ul *ngFor=\"let error of errors\">\r\n    <li>{{error | json}}</li>\r\n  </ul>\r\n</div>\r\n\r\n\r\n`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      // tslint:disable-next-line:no-forward-ref\n      useExisting: forwardRef(() => NgxFileUploaderComponent), multi: true\n    }\n  ]\n})\nexport class NgxFileUploaderComponent implements ControlValueAccessor, OnInit {\n  public urls = new Array<any>();\n  public selectFileType = true;\n  public fileList = new Array<any>();\n  public fileType: string;\n  public message = '';\n  public messageType = '';\n  public liveCamera = false;\n  public pdfAvailable = false;\n  public mobile = false;\n  public UploadCaptions = false;\n  @Input() public singleFile: any;\n  @Input() public formEntry: any;\n  public multiple = true;\n  public fileUpload = false;\n  public both = true;\n  public merge = false;\n  public backButton = false;\n  @Input() public source: any;\n  @Output() public fileChanged: EventEmitter<any> = new EventEmitter();\n  @Output() public uploadData: EventEmitter<any> = new EventEmitter();\n  @Output() public _onClear: EventEmitter<any> = new EventEmitter();\n  public _imagePath: string;\n  public showWebcam = true;\n  public allowCameraSwitch = true;\n  public multipleWebcamsAvailable = false;\n  public deviceId: string;\n  public videoOptions: MediaTrackConstraints = {\n    // width: {ideal: 1024},\n    // height: {ideal: 576}\n  };\n  public errors: WebcamInitError[] = [];\n\n  // latest snapshot\n  public webcamImage: WebcamImage = null;\n\n  // webcam snapshot trigger\n  private trigger: Subject<void> = new Subject<void>();\n  // switch to next / previous / specific webcam; true/false: forward/backwards, string: deviceId\n  private nextWebcam: Subject<boolean | string> = new Subject<boolean | string>();\n  public uploading = false;\n  // The internal data model\n  private innerValue: any = '';\n\n  // Placeholders for the callbacks which are later providesd\n  // by the Control Value Accessor\n  private onTouchedCallback: () => void = noop;\n  private onChangeCallback: (_: any) => void = noop;\n\n\n  public ngOnInit() {\n    if (this.singleFile) {\n      this.multiple = false;\n      this.both = false;\n    } else if (this.formEntry) {\n      this.both = false;\n    }\n    if (window.screen.width <= 692) { // 768px portrait\n      this.mobile = true;\n    }\n    WebcamUtil.getAvailableVideoInputs()\n      .then((mediaDevices: MediaDeviceInfo[]) => {\n        this.multipleWebcamsAvailable = mediaDevices && mediaDevices.length > 1;\n      });\n  }\n\n  // get accessor\n  get value(): any {\n    return this.innerValue;\n  }\n\n  // set accessor including call the onchange callback\n  set value(v: any) {\n    if (v !== this.innerValue) {\n      this.innerValue = v;\n      this.onChangeCallback(v);\n    }\n  }\n  // Current time string.\n\n  public writeValue(value: any) {\n    if (value !== this.innerValue) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n  public onBlur() {\n    this.onTouchedCallback();\n  }\n\n  public onChange(event: any) {\n    const files = event.srcElement.files;\n    this.uploading = true;\n    // const fileToLoad = files;\n\n    if (files) {\n      for (const file of files) {\n        const fileReader = new FileReader();\n\n        fileReader.onload = (fileLoadedEvent: any) => {\n          const data = fileReader.result;\n          const name = file.name;\n          const fileSize = Math.round(file.size / 1024);\n          if (fileSize >= 3000) {\n            this.message = 'File Too large';\n            this.messageType = 'danger';\n            setTimeout(() => {\n              this.message = '';\n            }, 3000);\n            this.back();\n          } else {\n            const payload = {\n              data,\n              id: this.urls.length + 1,\n              name: name,\n              size: fileSize\n            };\n            if (!this.singleFile) {\n              this.urls.push(payload);\n              this.fileList.push(payload);\n            } else {\n              this.fileChanged.emit(payload);\n              this.back();\n            }\n          }\n        };\n        fileReader.readAsDataURL(file);\n      }\n\n    }\n  }\n\n  public clear() {\n    this.value = '';\n    this.onChangeCallback(this.value);\n    this.urls = [];\n    this.back();\n    this._onClear.emit();\n  }\n  public back() {\n    this.selectFileType = true;\n    this.urls = [];\n    this.backButton = false;\n    this.fileList = [];\n    this.UploadCaptions = false;\n    this.singleFile = false;\n    this.pdfAvailable = false;\n    this.merge = false;\n    this.fileUpload = false;\n    this.liveCamera = false;\n  }\n  public toggleVisibility(filetype: string) {\n    if (filetype === 'image') {\n      this.fileType = 'image/png, image/jpeg, image/gif';\n      this.fileUpload = true;\n\n    } else if (filetype === 'pdf') {\n      if (this.formEntry) {\n        this.multiple = false;\n      }\n      this.fileType = 'application/pdf';\n      this.pdfAvailable = true;\n      this.fileUpload = true;\n\n    } else if (filetype === 'both') {\n      this.fileType = 'image/png, image/jpeg, image/gif , application/pdf';\n      this.pdfAvailable = true;\n      this.fileUpload = true;\n    } else if (filetype === 'liveCamera') {\n      this.liveCamera = true;\n    }\n    this.selectFileType = false;\n    this.backButton = true;\n    if (this.value) {\n     this.clear();\n    }\n\n  }\n\n  public upload() {\n    this.uploadData.emit(this.fileList);\n    this.back();\n  }\n\n  public MergeImages() {\n    const doc = new jsPDF({ compress: true });\n    doc.page = 1;\n    for (let i = 0; i < this.fileList.length; i++) {\n      const imageData = this.fileList[i].data || this.fileList[i].imageAsDataUrl;\n      doc.addImage(imageData, 'JPG', 10, 10, 190, 270, undefined, 'FAST');\n      doc.setFont('courier');\n      doc.setFontType('normal');\n      doc.text(180, 290, 'page ' + doc.page);\n      doc.page++;\n      if (i < this.fileList.length) {\n        doc.addPage();\n      }\n    }\n    doc.setProperties({\n      title: 'Ampath Medical Data',\n      author: 'POC',\n      creator: 'AMPATH'\n    });\n    doc.deletePage(this.fileList.length + 1);\n    this.fileList = [];\n    this.urls = [];\n    const output = doc.output('datauristring');\n    const re = /filename=generated.pdf;/gi;\n    const data = output.replace(re, '');\n    const payload = {\n      data,\n    };\n    if (this.formEntry) {\n      this.fileList = [];\n      this.urls = [];\n    }\n    this.message = 'The images have been merged into one pdf, You can now upload';\n    this.messageType = 'success';\n    setTimeout(() => {\n      this.message = '';\n    }, 3000);\n    this.fileList.push(payload);\n    this.urls.push(payload);\n    this.singleFile = false;\n    this.UploadCaptions = true;\n\n  }\n  public delete(urls: any) {\n    for (let i = 0; i <= this.urls.length; i++) {\n      if (urls.data) {\n        if (this.urls[i].data === urls.data) {\n          this.urls.splice(i, 1);\n          this.fileList.splice(i, 1);\n          break;\n        }\n      } else if (urls.imageAsDataUrl) {\n        if (this.urls[i].imageAsDataUrl === urls.imageAsDataUrl) {\n          this.urls.splice(i);\n          this.fileList.splice(i, 1);\n          break;\n        }\n      }\n    }\n    // enabling merge button if remaining on urls is images\n    const re = /pdf/gi;\n    for (let index = 0; index < this.urls.length; index++) {\n      if (this.urls[index].data.search(re) === -1) {\n        this.pdfAvailable = true;\n        break;\n      } else {\n        this.merge = true;\n        this.pdfAvailable = false;\n        this.fileUpload = true;\n      }\n    }\n  }\n  public triggerSnapshot(): void {\n    this.trigger.next();\n  }\n\n  public toggleWebcam(): void {\n    this.showWebcam = !this.showWebcam;\n  }\n\n  public handleInitError(error: WebcamInitError): void {\n    this.errors.push(error);\n  }\n\n  public showNextWebcam(directionOrDeviceId: boolean | string): void {\n    // true => move forward through devices\n    // false => move backwards through devices\n    // string => move to device with given deviceId\n    this.nextWebcam.next(directionOrDeviceId);\n  }\n\n  public handleImage(webcamImage: WebcamImage): void {\n    // console.info('received webcam image', webcamImage);\n    if (this.singleFile) {\n      this.urls = [];\n      this.fileList = [];\n      this.pushData(webcamImage);\n\n    }\n    this.pushData(webcamImage);\n  }\n  public pushData(webcamImage) {\n    this.urls.push(webcamImage);\n    this.fileList.push(webcamImage);\n  }\n\n  public cameraWasSwitched(deviceId: string): void {\n    // console.log('active device: ' + deviceId);\n    this.deviceId = deviceId;\n  }\n\n  public get triggerObservable(): Observable<void> {\n    return this.trigger.asObservable();\n  }\n\n  public get nextWebcamObservable(): Observable<boolean | string> {\n    return this.nextWebcam.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {WebcamModule} from 'ngx-webcam';\r\n\r\nimport { NgxFileUploaderComponent } from './ngx-file-uploader.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, FormsModule, WebcamModule\r\n  ],\r\n  declarations: [NgxFileUploaderComponent],\r\n  exports: [NgxFileUploaderComponent]\r\n})\r\nexport class NgxFileUploaderModule { }\r\n"],"names":[],"mappings":"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"}
